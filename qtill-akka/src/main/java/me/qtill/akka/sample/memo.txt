1. 全部代码逻辑基于事件模式，无法保证顺序编程的思维逻辑
2. 定义各种各样的事件类，并通过match来匹配不同事件类的处理方式，所谓reactor，即响应式编程：对不同的事件作出不同的响应，即为akka核心设计模式
3. 自行在事件中插入id，可以匹配请求和应答，否则不能保证请求应答的匹配关系
4. 本质上等效于一个轻量级的mq
5. actor之间存在一定的层级关系，可以watch
6. 通过PoisonPill可以shutdown任意的actor